<?xml version="1.0" encoding="UTF-8"?>
<project name="Caption Arena" default="deploy" basedir=".">
	<property file="build.properties" />
	<property name="project.name" value="${project.name}" />
	<property name="module.id" value="${module.id}" />

	<property name="project.dir" value="." />
	<property name="build.dir" value="${project.dir}/build" />
	<property name="bin.dir" value="${project.dir}/bin" />
	<property name="lib.dir" value="${project.dir}/lib" />
	<property name="package.file.zip" value="${build.dir}/${project.name}.zip" />
	<property name="package.file.jar" value="${build.dir}/${project.name}.jar" />
	<property name="project.file.zip" value="${build.dir}/${project.name}-project.zip" />
	<property name="package.file.amp" value="${build.dir}/${project.name}.amp" />
	<property name="module.dir" value="/module" />
	<property name="source.dir" value="${project.dir}/src" />
	<property name="config.dir" value="${project.dir}/config" />
	<property name="data.dir" value="${project.dir}/data" />
	<property name="web.dir" value="${project.dir}/web" />
	<property name="extension.dir" value="${config.dir}/web-extension" />
	<property name="yui-compressor" location="${yui-compressor}" />

	<path id="classpath">
		
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<target name="clean" description="Removes all generated files">
		<delete dir="${build.dir}" />
		<delete dir="${bin.dir}" />
	</target>

	<target name="clean-tomcat" description="Removes deployed extension directory">
		<delete dir="${alfresco.web.dir}/WEB-INF/classes/alfresco/web-extension" />
		<delete dir="${alfresco.web.dir}/WEB-INF/classes/alfresco/module" />
	</target>

	<target name="clean-min.js">
		<delete>
			<fileset dir="${web.dir}">
				<include name="**/*-min.js" />
			</fileset>
		</delete>
	</target>

	<target name="compress-js" depends="clean-min.js" description="Compress the javascript">
		<concat destfile="${web.dir}/js/documentlibrary-actions.js"
			force="no">
			<fileset file="${web.dir}/components/documentlibrary/actions.js" />
			<fileset file="${web.dir}/modules/simple-dialog.js" />
			<fileset file="${web.dir}/modules/documentlibrary/global-folder.js" />
			<fileset file="${web.dir}/modules/documentlibrary/copy-move-to.js" />
			<fileset file="${web.dir}/modules/documentlibrary/permissions.js" />
			<fileset file="${web.dir}/modules/documentlibrary/aspects.js" />
			<fileset file="${web.dir}/modules/social-publish.js" />
		</concat>

		<concat destfile="${web.dir}/js/datalist-actions.js" force="no">
			<fileset file="${web.dir}/components/data-lists/actions.js" />
			<fileset file="${web.dir}/modules/simple-dialog.js" />
		</concat>

		<touch file="${web.dir}/modules/about-user-min.js" />

		<echo>Compressing Slingshot Javascript...</echo>
		 <apply executable="java" parallel="false" dest="${web.dir}"> <fileset 
			dir="${web.dir}"> <include name="**/*.js" /> <exclude name="**/*-min.js" 
			/> </fileset> <arg line="-jar" /> <arg path="${yui-compressor}" /> <arg line="-o" 
			/> <targetfile /> <srcfile /> <mapper type="glob" from="*.js" to="*-min.js" 
			/> </apply> 
	</target>

	<target name="setup"
		description="Creates the ${build.dir} and ${bin.dir} directories">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${bin.dir}" />
	</target>

	<target name="package-extension" depends="setup, compress-js, package-jar"
		description="Creates a zip called ${package.file.zip} which can be unzipped on top of an exploded Alfresco web app">
		<delete file="${package.file.zip}" />
		<zip destfile="${package.file.zip}" update="true">
			<zipfileset file="${package.file.jar}" prefix="WEB-INF/lib" />
			<zipfileset dir="${config.dir}" prefix="WEB-INF/classes/alfresco" />
			<zipfileset dir="${bin.dir}" prefix="WEB-INF/classes" />
			<zipfileset dir="${lib.dir}" includes="**/*.jar" prefix="WEB-INF/lib" />
			<zipfileset dir="${web.dir}" excludes="META-INF/**" />
		</zip>
	</target>

	<target name="package-amp" depends="setup, package-jar, compress-js"
		description="Packages the customizations as an Alfresco module in ${package.file.amp}">
		<delete file="${package.file.amp}" />
		<zip destfile="${package.file.amp}">
			<zipfileset file="${package.file.jar}" prefix="lib" />
			<zipfileset dir="${lib.dir}" prefix="lib">
				<include name="*.jar" />
				<include name="*.zip" />
				<exclude name="servlet.jar" />
			</zipfileset>
			<zipfileset dir="${web.dir}" prefix="web" />
			<zipfileset dir="${config.dir}" prefix="config/alfresco" />
			<zipfileset
				file="${config.dir}${module.dir}/${module.id}/module.properties" />
			<zipfileset
				file="${config.dir}${module.dir}/${module.id}/file-mapping.properties" />
			<zipfileset
				file="${config.dir}${module.dir}/${module.id}/module-context.xml"
				prefix="config${module.dir}/${module.id}" />
			<zipfileset file="${extension.dir}/web-client-config-custom.xml"
				prefix="config${module.dir}/${module.id}/ui" />
			<!--<zipfileset dir="${lanxum.product.language.dir}" prefix="config" /> -->
		</zip>
	</target>

	<target name="install-amp" depends="package-amp"
		description="Uses the Alfresco MMT to install the AMP into ${alfresco.war.path}">
		<java dir="." fork="true" jar="${alfresco.mmt.dir}/alfresco-mmt.jar">
			<arg
				line="install ${package.file.amp} ${alfresco.war.path} -force -verbose" />
		</java>
	</target>

	<target name="deploy-amp" depends="install-amp"
		description="Unzips the AMP'd WAR file into ${alfresco.web.dir}">
		<unzip src="${alfresco.war.path}" dest="${alfresco.web.dir}" />
	</target>

	<target name="deploy" depends="package-extension"
		description="Unzips the ${package.file.zip} into ${alfresco.web.dir}">
		<unzip src="${package.file.zip}" dest="${alfresco.web.dir}" />
	</target>
	<target name="deploy-remote" depends="package-extension"
		description="Unzips the ${package.file.zip} into ${alfresco.web.dir}">
		<unzip src="${package.file.zip}" dest="${alfresco.remote.web.dir}" />
	</target>
	<target name="zip-project" depends="setup"
		description="Zips the entire Eclipse project as-is into ${project.file.zip}">
		<delete file="${project.file.zip}" />
		<zip destfile="${project.file.zip}">
			<zipfileset dir="${project.dir}" excludes="build/** bin/**"
				prefix="client-extensions" />
		</zip>
	</target>


	<target name="compile" description="Compiles src to ${bin.dir}">
		<!--echo message="${java.home}"/ -->
		<!--echo message="| |- ${echo.path.compile}"/ -->
		<mkdir dir="${bin.dir}" />
		<javac srcdir="${source.dir}/java" encoding="UTF-8" destdir="${bin.dir}"
			source="1.5" target="1.5" debug="on" fork="yes">
			<compilerarg value="-Xlint:unchecked" />
			<compilerarg value="-Xlint:deprecation" />
			<classpath refid="classpath" />
		</javac>
		<!-- copy in non-compiled files like props if needed -->
		<copy todir="${bin.dir}">
			<fileset dir="${source.dir}/java" excludes="**/*.java" />
		</copy>
	</target>

	<!-- get the source compile classpath in a printable form -->
	<pathconvert pathsep="${line.separator}|   |-- " property="echo.path.compile"
		refid="classpath">
	</pathconvert>


	<target name="package-jar" depends="setup, compile, compress-js"
		description="Jars up the compiled classes and ${web.dir} into ${package.file.jar}">
		<delete file="${package.file.jar}" />
		<jar destfile="${package.file.jar}">
			<fileset dir="${bin.dir}" includes="com/**" />
			<fileset dir="${bin.dir}" includes="org/**" />
			<fileset dir="${bin.dir}" includes="edu/**" />
			<zipfileset dir="${web.dir}" excludes="*.zip" prefix="w" />
		</jar>
	</target>
</project>
